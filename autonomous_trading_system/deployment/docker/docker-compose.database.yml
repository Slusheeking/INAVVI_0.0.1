version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=ats_user
      - POSTGRES_PASSWORD=${TIMESCALEDB_PASSWORD:-your_database_password_here}
      - POSTGRES_DB=ats_db
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./timescaledb/init:/docker-entrypoint-initdb.d
      - ./timescaledb/backups:/backups
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ats_user -d ats_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: >
      redis-server 
      --appendonly yes 
      --save 900 1 
      --save 300 10 
      --save 60 10000 
      --maxmemory 1gb 
      --maxmemory-policy volatile-lru
    volumes:
      - redis_data:/data
      - ./redis/backups:/backups
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backup service
  backup:
    image: postgres:14
    volumes:
      - ./backup_scripts:/backup_scripts
      - ./timescaledb/backups:/timescaledb_backups
      - ./redis/backups:/redis_backups
    command: /bin/bash -c "chmod +x /backup_scripts/backup.sh && /backup_scripts/backup.sh"
    depends_on:
      - timescaledb
      - redis
    restart: unless-stopped

volumes:
  timescaledb_data:
    driver: local
  redis_data:
    driver: local