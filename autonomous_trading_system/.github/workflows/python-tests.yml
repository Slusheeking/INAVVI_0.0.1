name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio pytest-mock
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          
      - name: Run unit tests
        run: |
          pytest tests/unit --cov=src/
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY || 'example_key' }}
          UNUSUAL_WHALES_API_KEY: ${{ secrets.UNUSUAL_WHALES_API_KEY || 'example_key' }}
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY || 'example_key' }}
          ALPACA_API_SECRET: ${{ secrets.ALPACA_API_SECRET || 'example_secret' }}
          TIMESCALEDB_HOST: localhost
          TIMESCALEDB_PORT: 5432
          TIMESCALEDB_DATABASE: test_db
          TIMESCALEDB_USER: postgres
          TIMESCALEDB_PASSWORD: postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          
      - name: Run integration tests
        run: |
          pytest tests/integration --cov=src/ --cov-append
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY || 'example_key' }}
          UNUSUAL_WHALES_API_KEY: ${{ secrets.UNUSUAL_WHALES_API_KEY || 'example_key' }}
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY || 'example_key' }}
          ALPACA_API_SECRET: ${{ secrets.ALPACA_API_SECRET || 'example_secret' }}
          TIMESCALEDB_HOST: localhost
          TIMESCALEDB_PORT: 5432
          TIMESCALEDB_DATABASE: test_db
          TIMESCALEDB_USER: postgres
          TIMESCALEDB_PASSWORD: postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false